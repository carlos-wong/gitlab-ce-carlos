- if @merge_requests.any?
  %h2.merge-requests-title
    = pluralize(@merge_requests.count, 'Related Merge Request')
  %ul.unstyled-list.related-merge-requests
    - has_any_head_pipeline = @merge_requests.any?(&:head_pipeline_id)
    - @merge_requests.each do |merge_request|
      - merge_request = merge_request.present(current_user: current_user)
      %li
        %span.merge-request-ci-status
          - if merge_request.can_read_pipeline?
            = render_pipeline_status(merge_request.head_pipeline)
          - elsif has_any_head_pipeline
            = icon('blank fw')
        %span.merge-request-id
          = merge_request.to_reference
        %span.merge-request-info
          %strong
            = link_to merge_request.title, merge_request_path(merge_request), class: "row_title"
          - unless @issue.project.id == merge_request.target_project.id
            in
            - project = merge_request.target_project
            = link_to project.full_name, project_path(project)

        - if merge_request.merged?
          %span.merge-request-status.prepend-left-10.merged
            Merged
        - elsif merge_request.closed?
          %span.merge-request-status.prepend-left-10.closed
            Closed
        - else
          %span.merge-request-status.prepend-left-10.open
            Open

    - if @closed_by_merge_requests.present?
      %li
        = render partial: 'projects/issues/closed_by_box', locals: {merge_request_count: @merge_requests.count}
