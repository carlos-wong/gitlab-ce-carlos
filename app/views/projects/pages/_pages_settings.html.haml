- can_edit_max_page_size=can?(current_user, :update_max_pages_size)
- can_enforce_https_only=Gitlab.config.pages.external_http || Gitlab.config.pages.external_https

- return unless can_edit_max_page_size || can_enforce_https_only
= gitlab_ui_form_for @project, url: project_pages_path(@project), html: { class: 'inline', title: pages_https_only_title } do |f|
  - if can_edit_max_page_size
    = render_if_exists 'shared/pages/max_pages_size_input', form: f

  - if can_enforce_https_only
    .form-group
      = f.gitlab_ui_checkbox_component :pages_https_only,
        s_('GitLabPages|Force HTTPS (requires valid certificates)'),
        checkbox_options: { disabled: pages_https_only_disabled? },
        label_options: { class: 'label-bold' }
      - docs_link_start = "<a href='#{help_page_path('user/project/pages/custom_domains_ssl_tls_certification/index', anchor: 'force-https-for-gitlab-pages-websites')}' target='_blank' rel='noopener noreferrer'>".html_safe
      - link_end = '</a>'.html_safe
      %p.gl-pl-6
        = s_("GitLabPages|When enabled, all attempts to visit your website through HTTP are automatically redirected to HTTPS using a response with status code 301. Requires a valid certificate for all domains. %{docs_link_start}Learn more.%{link_end}").html_safe % { docs_link_start: docs_link_start, link_end: link_end }

  .gl-mt-3
    = f.submit s_('GitLabPages|Save changes'), class: 'btn btn-confirm gl-button'
