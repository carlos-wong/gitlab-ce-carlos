- templates = []
- setting = project_incident_management_setting
- templates = setting.available_issue_templates.map { |t| [t.name, t.key] }

%section.settings.no-animate.qa-incident-management-settings
  .settings-header
    %h3{ :class => "h4" }= _('Incidents')
    %button.btn.js-settings-toggle{ type: 'button' }
      = _('Expand')
    %p
      = _('Action to take when receiving an alert.')
      = link_to help_page_path('user/project/integrations/prometheus', anchor: 'taking-action-on-an-alert-ultimate') do
        = _('More information')
  .settings-content
    = form_for @project, url: project_settings_operations_path(@project), method: :patch do |f|
      = form_errors(@project.incident_management_setting)
      .form-group
        = f.fields_for :incident_management_setting_attributes, setting do |form|
          .form-group
            = form.check_box :create_issue
            = form.label :create_issue, _('Create an issue. Issues are created for each alert triggered.'), class: 'form-check-label'
          .form-group.col-sm-8
            = form.label :issue_template_key, class: 'label-bold' do
              = _('Issue template (optional)')
              = link_to icon('question-circle'), help_page_path('user/project/description_templates', anchor: 'creating-issue-templates'), target: '_blank', rel: 'noopener noreferrer'
            .select-wrapper
              = form.select :issue_template_key, templates, {include_blank: 'No template selected'}, class: "form-control select-control"
              = icon('chevron-down')
          .form-group
            = form.check_box :send_email
            = form.label :send_email, _('Send a separate email notification to Developers.'), class: 'form-check-label'
      = f.submit _('Save changes'), class: 'btn btn-success'
