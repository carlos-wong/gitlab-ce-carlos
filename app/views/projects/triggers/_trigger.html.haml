%tr
  %td
    - if trigger.has_token_exposed?
      %span= trigger.token
      = clipboard_button(text: trigger.token, title: _("Copy trigger token"))
    - else
      %span= trigger.short_token

    .label-container
      - if trigger.legacy?
        - if trigger.supports_legacy_tokens?
          %span.badge.badge-primary.has-tooltip{ title: "Trigger makes use of deprecated functionality" } legacy
        - else
          %span.badge.badge-danger.has-tooltip{ title: "Trigger is invalid due to being a legacy trigger. We recommend replacing it with a new trigger" } invalid
      - elsif !trigger.can_access_project?
        %span.badge.badge-danger.has-tooltip{ title: "Trigger user has insufficient permissions to project" } invalid

  %td
    - if trigger.description? && trigger.description.length > 15
      %span.has-tooltip{ title: trigger.description }= truncate(trigger.description, length: 15)
    - else
      = trigger.description

  %td
    - if trigger.owner
      .trigger-owner.sr-only= trigger.owner.name
      = user_avatar(user: trigger.owner, size: 20)

  %td
    - if trigger.last_used
      = time_ago_with_tooltip trigger.last_used
    - else
      Never

  %td.text-right.trigger-actions
    - revoke_trigger_confirmation = "By revoking a trigger you will break any processes making use of it. Are you sure?"
    - if can?(current_user, :admin_trigger, trigger)
      = link_to edit_project_trigger_path(@project, trigger), method: :get, title: "Edit", class: "btn btn-default btn-sm" do
        %i.fa.fa-pencil
    - if can?(current_user, :manage_trigger, trigger)
      = link_to project_trigger_path(@project, trigger), data: { confirm: revoke_trigger_confirmation }, method: :delete, title: "Revoke", class: "btn btn-default btn-warning btn-sm btn-trigger-revoke" do
        %i.fa.fa-trash
