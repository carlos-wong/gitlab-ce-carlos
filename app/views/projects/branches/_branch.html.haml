- merged = local_assigns.fetch(:merged, false)
- commit = @repository.commit(branch.dereferenced_target)
- merge_project = merge_request_source_project_for_project(@project)
%li{ class: "branch-item gl-display-flex! gl-align-items-center! js-branch-item js-branch-#{branch.name}", data: { name: branch.name } }
  .branch-info
    .gl-display-flex.gl-align-items-center
      = sprite_icon('branch', size: 12, css_class: 'gl-flex-shrink-0')
      = link_to project_tree_path(@project, branch.name), class: 'item-title str-truncated-100 ref-name gl-ml-3 qa-branch-name' do
        = branch.name
      = clipboard_button(text: branch.name, title: _("Copy branch name"))
      - if branch.name == @repository.root_ref
        = gl_badge_tag s_('DefaultBranchLabel|default'), { variant: :info, size: :sm }, { class: 'gl-ml-2' }
      - elsif merged
        = gl_badge_tag s_('Branches|merged'), { variant: :info, size: :sm }, { class: 'gl-ml-2', title: s_('Branches|Merged into %{default_branch}') % { default_branch: @repository.root_ref }, data: { toggle: 'tooltip', container: 'body' } }
      - if protected_branch?(@project, branch)
        = gl_badge_tag s_('Branches|protected'), { variant: :success, size: :sm }, { class: 'gl-ml-2' }

      = render_if_exists 'projects/branches/diverged_from_upstream', branch: branch

    .block-truncated
      - if commit
        = render 'projects/branches/commit', commit: commit, project: @project
      - else
        = s_('Branches|Canâ€™t find HEAD commit for this branch')

  - if branch.name != @repository.root_ref
    .js-branch-divergence-graph

  .controls.d-none.d-md-block<
    - if commit_status
      = render 'ci/status/icon', size: 24, status: commit_status, option_css_classes: 'gl-display-inline-flex gl-vertical-align-middle gl-mr-5'
    - elsif show_commit_status
      .gl-display-inline-flex.gl-vertical-align-middle.gl-mr-5
        %svg.s24

    - if merge_project && create_mr_button?(from: @repository.root_ref, to: branch.name, source_project: @project, target_project: @project)
      = link_to create_mr_path(from: @repository.root_ref, to: branch.name, source_project: @project, target_project: @project), class: 'gl-button btn btn-default' do
        = _('Merge request')

    - if branch.name != @repository.root_ref
      = link_to project_compare_index_path(@project, from: @repository.root_ref, to: branch.name),
        class: "gl-button btn btn-default js-onboarding-compare-branches #{'gl-ml-3' unless merge_project}",
        method: :post,
        title: s_('Branches|Compare') do
        = s_('Branches|Compare')

    = render 'projects/buttons/download', project: @project, ref: branch.name, pipeline: @refs_pipelines[branch.name], class: 'gl-vertical-align-top'

    = render 'projects/branches/delete_branch_modal_button', project: @project, branch: branch, merged: merged
