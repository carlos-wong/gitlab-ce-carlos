- if @search_objects.to_a.empty?
  = render partial: "search/results/empty"
  = render_if_exists 'shared/promotions/promote_advanced_search'
- else
  .row-content-block
    - unless @search_objects.is_a?(Kaminari::PaginatableWithoutCount)
      = search_entries_info(@search_objects, @scope, @search_term)
    - unless @show_snippets
      - if @project
        - link_to_project = link_to(@project.full_name, [@project.namespace.becomes(Namespace), @project])
        = _("in project %{link_to_project}").html_safe % { link_to_project: link_to_project }
      - elsif @group
        - link_to_group = link_to(@group.name, @group)
        = _("in group %{link_to_group}").html_safe % { link_to_group: link_to_group }
  = render_if_exists 'shared/promotions/promote_advanced_search'
  .results.prepend-top-10
    - if @scope == 'commits'
      %ul.content-list.commit-list
        = render partial: "search/results/commit", collection: @search_objects
    - else
      .search-results
        - if @scope == 'projects'
          .term
            = render 'shared/projects/list', projects: @search_objects, pipeline_status: false
        - else
          - locals = { projects: blob_projects(@search_objects) } if %w[blobs wiki_blobs].include?(@scope)
          = render partial: "search/results/#{@scope.singularize}", collection: @search_objects, locals: locals

    - if @scope != 'projects'
      = paginate_collection(@search_objects)
