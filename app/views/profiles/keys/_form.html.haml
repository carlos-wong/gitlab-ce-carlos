- max_date = ::Gitlab::CurrentSettings.max_ssh_key_lifetime_from_now.to_date if ssh_key_expiration_policy_enabled?
%div
  = form_for [:profile, @key], html: { class: 'js-requires-input' } do |f|
    = form_errors(@key)

    .form-group
      = f.label :key, s_('Profiles|Key'), class: 'label-bold'
      = f.text_area :key, class: "form-control gl-form-input js-add-ssh-key-validation-input qa-key-public-key-field", rows: 8, required: true, data: { supported_algorithms: Gitlab::SSHPublicKey.supported_algorithms }
      %p.form-text.text-muted= s_('Profiles|Begins with %{ssh_key_algorithms}.') % { ssh_key_algorithms: ssh_key_allowed_algorithms }
    .form-row
      .col.form-group
        = f.label :title, s_('Profiles|Title'), class: 'label-bold'
        = f.text_field :title, class: "form-control gl-form-input input-lg qa-key-title-field", required: true, placeholder: s_('Profiles|Example: MacBook key')
        %p.form-text.text-muted= s_('Profiles|Key titles are publicly visible.')

      .col.form-group
        = f.label :expires_at, s_('Profiles|Expiration date'), class: 'label-bold'
        = f.date_field :expires_at, class: "form-control input-lg", min: Date.tomorrow, max: max_date, data: { qa_selector: 'key_expiry_date_field' }
        %p.form-text.text-muted{ data: { qa_selector: 'key_expiry_date_field_description' } }= ssh_key_expires_field_description

    .js-add-ssh-key-validation-warning.hide
      .bs-callout.bs-callout-warning{ role: 'alert', aria_live: 'assertive' }
        %strong= _('Oops, are you sure?')
        %p= s_("Profiles|Publicly visible private SSH keys can compromise your system.")

      %button.btn.gl-button.btn-confirm.js-add-ssh-key-validation-confirm-submit= _("Yes, add it")

    .gl-mt-3
      = f.submit s_('Profiles|Add key'), class: "gl-button btn btn-confirm js-add-ssh-key-validation-original-submit qa-add-key-button"
