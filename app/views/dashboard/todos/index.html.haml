- @hide_top_links = true
- page_title "To-Do List"
- header_title "To-Do List", dashboard_todos_path

= render_dashboard_gold_trial(current_user)

.page-title-holder.d-flex.align-items-center
  %h1.page-title= _('To-Do List')

- if current_user.todos.any?
  .top-area
    %ul.nav-links.mobile-separator.nav.nav-tabs
      %li.todos-pending{ class: active_when(params[:state].blank? || params[:state] == 'pending') }>
        = link_to todos_filter_path(state: 'pending') do
          %span
            To Do
          %span.badge.badge-pill
            = number_with_delimiter(todos_pending_count)
      %li.todos-done{ class: active_when(params[:state] == 'done') }>
        = link_to todos_filter_path(state: 'done') do
          %span
            Done
          %span.badge.badge-pill
            = number_with_delimiter(todos_done_count)

    .nav-controls
      - if @todos.any?(&:pending?)
        .append-right-default
          = link_to destroy_all_dashboard_todos_path(todos_filter_params), class: 'btn btn-loading d-flex align-items-center js-todos-mark-all', method: :delete, data: { href: destroy_all_dashboard_todos_path(todos_filter_params) } do
            Mark all as done
            %span.spinner.ml-1
          = link_to bulk_restore_dashboard_todos_path, class: 'btn btn-loading d-flex align-items-center js-todos-undo-all hidden', method: :patch , data: { href: bulk_restore_dashboard_todos_path(todos_filter_params) } do
            Undo mark all as done
            %span.spinner.ml-1

  .todos-filters
    .issues-details-filters.row-content-block.second-block
      = form_tag todos_filter_path(without: [:project_id, :author_id, :type, :action_id]), method: :get, class: 'filter-form d-sm-flex' do
        .filter-categories.flex-fill
          .filter-item.inline
            - if params[:group_id].present?
              = hidden_field_tag(:group_id, params[:group_id])
            = dropdown_tag(group_dropdown_label(params[:group_id], 'Group'), options: { toggle_class: 'js-group-search js-filter-submit', title: 'Filter by group', filter: true, filterInput: 'input#group-search', dropdown_class: 'dropdown-menu-selectable dropdown-menu-group js-filter-submit',
              placeholder: 'Search groups', data: { data: todo_group_options, default_label: 'Group', display: 'static' } })
          .filter-item.inline
            - if params[:project_id].present?
              = hidden_field_tag(:project_id, params[:project_id])
            = dropdown_tag(project_dropdown_label(params[:project_id], 'Project'), options: { toggle_class: 'js-project-search js-filter-submit', title: 'Filter by project', filter: true, filterInput: 'input#project-search', dropdown_class: 'dropdown-menu-selectable dropdown-menu-project js-filter-submit',
              placeholder: 'Search projects', data: { data: todo_projects_options, default_label: 'Project', display: 'static' } })
          .filter-item.inline
            - if params[:author_id].present?
              = hidden_field_tag(:author_id, params[:author_id])
            = dropdown_tag(user_dropdown_label(params[:author_id], 'Author'), options: { toggle_class: 'js-user-search js-filter-submit js-author-search', title: 'Filter by author', filter: true, filterInput: 'input#author-search', dropdown_class: 'dropdown-menu-user dropdown-menu-selectable dropdown-menu-author js-filter-submit',
              placeholder: 'Search authors', data: { any_user: 'Any Author', first_user: (current_user.username if current_user), project_id: (@project.id if @project), selected: params[:author_id], field_name: 'author_id', default_label: 'Author', todo_filter: true, todo_state_filter: params[:state] || 'pending' } })
          .filter-item.inline
            - if params[:type].present?
              = hidden_field_tag(:type, params[:type])
            = dropdown_tag(todo_types_dropdown_label(params[:type], 'Type'), options: { toggle_class: 'js-type-search js-filter-submit', dropdown_class: 'dropdown-menu-selectable dropdown-menu-type js-filter-submit',
              data: { data: todo_types_options, default_label: 'Type' } })
          .filter-item.inline.actions-filter
            - if params[:action_id].present?
              = hidden_field_tag(:action_id, params[:action_id])
            = dropdown_tag(todo_actions_dropdown_label(params[:action_id], 'Action'), options: { toggle_class: 'js-action-search js-filter-submit', dropdown_class: 'dropdown-menu-selectable dropdown-menu-action js-filter-submit',
              data: { data: todo_actions_options, default_label: 'Action' } })
        .filter-item.sort-filter
          .dropdown
            %button.dropdown-menu-toggle.dropdown-menu-toggle-sort{ type: 'button', 'data-toggle' => 'dropdown' }
              %span.light
              - if @sort.present?
                = sort_options_hash[@sort]
              - else
                = sort_title_recently_created
              = icon('chevron-down')
            %ul.dropdown-menu.dropdown-menu-sort.dropdown-menu-right
              %li
                = link_to todos_filter_path(sort: sort_value_label_priority) do
                  = sort_title_label_priority
                = link_to todos_filter_path(sort: sort_value_recently_created) do
                  = sort_title_recently_created
                = link_to todos_filter_path(sort: sort_value_oldest_created) do
                  = sort_title_oldest_created

.js-todos-all
  - if @todos.any?
    .js-todos-list-container
      .js-todos-options{ data: { per_page: @todos.limit_value, current_page: @todos.current_page, total_pages: @todos.total_pages } }
        .card.card-without-border.card-without-margin
          %ul.content-list.todos-list
            = render @todos
      = paginate @todos, theme: "gitlab"
    .js-nothing-here-container.todos-all-done.hidden.svg-content
      = image_tag 'illustrations/todos_all_done.svg'
      %h4.text-center
        You're all done!
  - elsif current_user.todos.any?
    .todos-all-done
      .svg-content.svg-250
        = image_tag 'illustrations/todos_all_done.svg'
      - if todos_filter_empty?
        %h4.text-center
          = Gitlab.config.gitlab.no_todos_messages.sample
        %p
          Are you looking for things to do? Take a look at
          = succeed "," do
            = link_to "open issues", issues_dashboard_path
          contribute to
          = link_to "a merge request\,", merge_requests_dashboard_path
          or mention someone in a comment to automatically assign them a new to-do item.
      - else
        %h4.text-center
          Nothing is on your to-do list. Nice work!
  - else
    .todos-empty
      .todos-empty-hero.svg-content
        = image_tag 'illustrations/todos_empty.svg'
      .todos-empty-content
        %h4
          Your To-Do List shows what to work on next
        %p
          When an issue or merge request is assigned to you, or when you receive a
          %strong
            @mention
          in a comment, this automatically triggers a new item in your To-Do List.
        %p
          It's how you always know what to work on next.
