- @sort ||= sort_value_latest_activity
.dropdown.js-project-filter-dropdown-wrap
  = dropdown_toggle(projects_sort_options_hash[@sort], { toggle: 'dropdown', display: 'static' }, { id: 'sort-projects-dropdown' })
  %ul.dropdown-menu.dropdown-menu-right.dropdown-menu-selectable
    %li.dropdown-header
      = _("Sort by")
    - projects_sort_options_hash.each do |value, title|
      %li
        = link_to filter_projects_path(sort: value), class: ("is-active" if @sort == value) do
          = title

    %li.divider
    %li
      = link_to filter_projects_path(archived: nil), class: ("is-active" unless params[:archived].present?) do
        = _("Hide archived projects")
    %li
      = link_to filter_projects_path(archived: true), class: ("is-active" if Gitlab::Utils.to_boolean(params[:archived])) do
        = _("Show archived projects")
    %li
      = link_to filter_projects_path(archived: 'only'), class: ("is-active" if params[:archived] == 'only') do
        = _("Show archived projects only")
    - if current_user
      %li.divider
      %li
        = link_to filter_projects_path(personal: nil), class: ("is-active" unless params[:personal].present?) do
          = _("Owned by anyone")
      %li
        = link_to filter_projects_path(personal: true), class: ("is-active" if params[:personal].present?) do
          = _("Owned by me")
      - if @group && @group.shared_projects.present?
        %li.divider
        %li
          = link_to filter_projects_path(shared: nil), class: ("is-active" unless params[:shared].present?) do
            = _("All projects")
        %li
          = link_to filter_projects_path(shared: 0), class: ("is-active" if params[:shared] == '0') do
            = _("Hide shared projects")
        %li
          = link_to filter_projects_path(shared: 1), class: ("is-active" if params[:shared] == '1') do
            = _("Hide group projects")
