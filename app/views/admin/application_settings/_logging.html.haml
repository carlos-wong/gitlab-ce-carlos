= form_for @application_setting, url: admin_application_settings_path(anchor: 'js-logging-settings'), html: { class: 'fieldset-form' } do |f|
  = form_errors(@application_setting)

  %p
    %strong
      NOTE:
    These settings will be removed from the UI in a GitLab 12.0 release and made available within gitlab.yml.
    In addition, you will be able to define a Sentry Environment to differentiate between multiple deployments. For example, development, staging, and production.

  %fieldset
    .form-group
      .form-check
        = f.check_box :sentry_enabled, class: 'form-check-input'
        = f.label :sentry_enabled, class: 'form-check-label' do
          Enable Sentry
        .form-text.text-muted
          %p This setting requires a restart to take effect.
          Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here:
          %a{ href: 'https://getsentry.com', target: '_blank', rel: 'noopener noreferrer' } https://getsentry.com

    .form-group
      = f.label :sentry_dsn, 'Sentry DSN', class: 'label-bold'
      = f.text_field :sentry_dsn, class: 'form-control'

    .form-group
      .form-check
        = f.check_box :clientside_sentry_enabled, class: 'form-check-input'
        = f.label :clientside_sentry_enabled, class: 'form-check-label' do
          Enable Clientside Sentry
        .form-text.text-muted
          Sentry can also be used for reporting and logging clientside exceptions.
          %a{ href: 'https://sentry.io/for/javascript/', target: '_blank', rel: 'noopener noreferrer' } https://sentry.io/for/javascript/

    .form-group
      = f.label :clientside_sentry_dsn, 'Clientside Sentry DSN', class: 'label-bold'
      = f.text_field :clientside_sentry_dsn, class: 'form-control'

  = f.submit 'Save changes', class: "btn btn-success"
