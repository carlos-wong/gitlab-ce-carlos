= form_for @application_setting, url: network_admin_application_settings_path(anchor: 'js-outbound-settings'), html: { class: 'fieldset-form' } do |f|
  = form_errors(@application_setting)

  %fieldset
    .form-group
      .form-check
        = f.check_box :allow_local_requests_from_web_hooks_and_services, class: 'form-check-input', data: { qa_selector: 'allow_requests_from_services_checkbox' }
        = f.label :allow_local_requests_from_web_hooks_and_services, class: 'form-check-label' do
          = _('Allow requests to the local network from web hooks and services')
      .form-check
        = f.check_box :allow_local_requests_from_system_hooks, class: 'form-check-input'
        = f.label :allow_local_requests_from_system_hooks, class: 'form-check-label' do
          = _('Allow requests to the local network from system hooks')

    .form-group
      = f.label :outbound_local_requests_whitelist_raw, class: 'label-bold' do
        = _('Whitelist to allow requests to the local network from hooks and services')
      = f.text_area :outbound_local_requests_whitelist_raw, placeholder: "example.com, 192.168.1.1", class: 'form-control', rows: 8
      %span.form-text.text-muted
        = _('Requests to these domain(s)/address(es) on the local network will be allowed when local requests from hooks and services are not allowed. IP ranges such as 1:0:0:0:0:0:0:0/124 or 127.0.0.0/28 are supported. Domain wildcards are not supported currently. Use comma, semicolon, or newline to separate multiple entries. The whitelist can hold a maximum of 1000 entries. Domains should use IDNA encoding. Ex: example.com, 192.168.1.1, 127.0.0.0/28, xn--itlab-j1a.com.')

    .form-group
      .form-check
        = f.check_box :dns_rebinding_protection_enabled, class: 'form-check-input'
        = f.label :dns_rebinding_protection_enabled, class: 'form-check-label' do
          = _('Enforce DNS rebinding attack protection')
        %span.form-text.text-muted
          = _('Resolves IP addresses once and uses them to submit requests')

  = f.submit 'Save changes', class: "btn btn-success", data: { qa_selector: 'save_changes_button' }
