= form_for @application_setting, url: network_admin_application_settings_path(anchor: 'js-performance-settings'), html: { class: 'fieldset-form' } do |f|
  = form_errors(@application_setting)

  %fieldset
    .form-group
      .form-check
        = f.check_box :authorized_keys_enabled, class: 'form-check-input'
        = f.label :authorized_keys_enabled, class: 'form-check-label' do
          Write to "authorized_keys" file
        .form-text.text-muted
          By default, we write to the "authorized_keys" file to support Git
          over SSH without additional configuration. GitLab can be optimized
          to authenticate SSH keys via the database file. Only uncheck this
          if you have configured your OpenSSH server to use the
          AuthorizedKeysCommand. Click on the help icon for more details.
          = link_to icon('question-circle'), help_page_path('administration/operations/fast_ssh_key_lookup')

    .form-group
      = f.label :raw_blob_request_limit, _('Raw blob request rate limit per minute'), class: 'label-bold'
      = f.number_field :raw_blob_request_limit, class: 'form-control'
      .form-text.text-muted
        = _('Highest number of requests per minute for each raw path, default to 300. To disable throttling set to 0.')
    .form-group
      = f.label :push_event_hooks_limit, class: 'label-bold'
      = f.number_field :push_event_hooks_limit, class: 'form-control'
      .form-text.text-muted
        = _("Number of changes (branches or tags) in a single push to determine whether webhooks and services will be fired or not. Webhooks and services won't be submitted if it surpasses that value.")
    .form-group
      = f.label :push_event_activities_limit, class: 'label-bold'
      = f.number_field :push_event_activities_limit, class: 'form-control'
      .form-text.text-muted
        = _('Number of changes (branches or tags) in a single push to determine whether individual push events or bulk push event will be created. Bulk push event will be created if it surpasses that value.')

  = f.submit 'Save changes', class: "btn btn-success"
