= gitlab_ui_form_for @application_setting, url: general_admin_application_settings_path(anchor: 'js-account-settings'), html: { class: 'fieldset-form', id: 'account-settings' } do |f|
  = form_errors(@application_setting)

  %fieldset
    .form-group
      = f.gitlab_ui_checkbox_component :gravatar_enabled, _('Gravatar enabled')

    .form-group
      = f.label :default_projects_limit, _('Default projects limit'), class: 'label-bold'
      = f.number_field :default_projects_limit, class: 'form-control gl-form-input', title: _('Maximum number of projects.'), data: { toggle: 'tooltip', container: 'body' }
    .form-group
      = f.label :max_attachment_size, _('Maximum attachment size (MB)'), class: 'label-bold'
      = f.number_field :max_attachment_size, class: 'form-control gl-form-input', title: _('Maximum size of individual attachments in comments.'), data: { toggle: 'tooltip', container: 'body' }

    = render 'admin/application_settings/repository_size_limit_setting_registration_features_cta', form: f
    = render_if_exists 'admin/application_settings/repository_size_limit_setting', form: f

    .form-group
      = f.label :receive_max_input_size, _('Maximum push size (MB)'), class: 'label-light'
      = f.number_field :receive_max_input_size, class: 'form-control gl-form-input qa-receive-max-input-size-field', title: _('Maximum size limit for a single commit.'), data: { toggle: 'tooltip', container: 'body' }
    .form-group
      = f.label :max_import_size, _('Maximum import size (MB)'), class: 'label-light'
      = f.number_field :max_import_size, class: 'form-control gl-form-input qa-receive-max-import-size-field', title: _('Maximum size of import files.'), data: { toggle: 'tooltip', container: 'body' }
      %span.form-text.text-muted= _('Only effective when remote storage is enabled. Set to 0 for no size limit.')
    .form-group
      = f.label :session_expire_delay, _('Session duration (minutes)'), class: 'label-light'
      = f.number_field :session_expire_delay, class: 'form-control gl-form-input', title: _('Maximum duration of a session.'), data: { toggle: 'tooltip', container: 'body' }
      %span.form-text.text-muted#session_expire_delay_help_block= _('Restart GitLab to apply changes.')

    = render_if_exists 'admin/application_settings/git_two_factor_session_expiry', form: f
    = render_if_exists 'admin/application_settings/personal_access_token_expiration_policy', form: f
    = render_if_exists 'admin/application_settings/enforce_pat_expiration', form: f
    = render_if_exists 'admin/application_settings/ssh_key_expiration_policy', form: f
    = render_if_exists 'admin/application_settings/enforce_ssh_key_expiration', form: f

    .form-group
      = f.label :user_oauth_applications, _('User OAuth applications'), class: 'label-bold'
      = f.gitlab_ui_checkbox_component :user_oauth_applications, _('Allow users to register any application to use GitLab as an OAuth provider')
    .form-group
      = f.label :user_default_external, _('New users set to external'), class: 'label-bold'
      = f.gitlab_ui_checkbox_component :user_default_external, _('Newly-registered users are external by default')
      .gl-mt-3
        = _('Internal users')
      = f.text_field :user_default_internal_regex, placeholder: _('Regex pattern'), class: 'form-control gl-form-input gl-mt-2'
      .help-block
        = _('Specify an email address regex pattern to identify default internal users.')
        = link_to _('Learn more'), help_page_path('user/permissions', anchor: 'setting-new-users-to-external'), target: '_blank', rel: 'noopener noreferrer'
    - unless Gitlab.com?
      .form-group
        = f.label :deactivate_dormant_users, _('Dormant users'), class: 'label-bold'
        - dormant_users_help_link = help_page_path('user/admin_area/moderate_users', anchor: 'automatically-deactivate-dormant-users')
        - dormant_users_help_link_start = '<a href="%{url}" target="_blank" rel="noopener noreferrer">'.html_safe % { url: dormant_users_help_link }
        = f.gitlab_ui_checkbox_component :deactivate_dormant_users, _('Deactivate dormant users after 90 days of inactivity'), help_text: _('Users can reactivate their account by signing in. %{link_start}Learn more%{link_end}').html_safe % { link_start: dormant_users_help_link_start, link_end: '</a>'.html_safe }
    .form-group
      = f.label :personal_access_token_prefix, _('Personal Access Token prefix'), class: 'label-light'
      = f.text_field :personal_access_token_prefix, placeholder: _('Maximum 20 characters'), class: 'form-control gl-form-input'
    .form-group
      = f.label :user_show_add_ssh_key_message, _('Prompt users to upload SSH keys'), class: 'label-bold'
      = f.gitlab_ui_checkbox_component :user_show_add_ssh_key_message, _("Inform users without uploaded SSH keys that they can't push over SSH until one is added")

    = render_if_exists 'admin/application_settings/updating_name_disabled_for_users', form: f
    = render_if_exists 'admin/application_settings/availability_on_namespace_setting', form: f
  = f.submit _('Save changes'), class: 'gl-button btn btn-confirm qa-save-changes-button'
