= form_for @application_setting, url: general_admin_application_settings_path(anchor: 'js-account-settings'), html: { class: 'fieldset-form' } do |f|
  = form_errors(@application_setting)

  %fieldset
    .form-group
      .form-check
        = f.check_box :gravatar_enabled, class: 'form-check-input'
        = f.label :gravatar_enabled, class: 'form-check-label' do
          = _('Gravatar enabled')
    .form-group
      = f.label :default_projects_limit, _('Default projects limit'), class: 'label-bold'
      = f.number_field :default_projects_limit, class: 'form-control', title: _('Maximum number of projects.'), data: { toggle: 'tooltip', container: 'body' }
    .form-group
      = f.label :max_attachment_size, _('Maximum attachment size (MB)'), class: 'label-bold'
      = f.number_field :max_attachment_size, class: 'form-control', title: _('Maximum size of individual attachments in comments.'), data: { toggle: 'tooltip', container: 'body' }

    = render_if_exists 'admin/application_settings/repository_size_limit_setting', form: f

    .form-group
      = f.label :receive_max_input_size, _('Maximum push size (MB)'), class: 'label-light'
      = f.number_field :receive_max_input_size, class: 'form-control qa-receive-max-input-size-field', title: _('Maximum size limit for a single commit.'), data: { toggle: 'tooltip', container: 'body' }
    .form-group
      = f.label :session_expire_delay, _('Session duration (minutes)'), class: 'label-light'
      = f.number_field :session_expire_delay, class: 'form-control', title: _('Maximum duration of a session.'), data: { toggle: 'tooltip', container: 'body' }
      %span.form-text.text-muted#session_expire_delay_help_block= _('GitLab restart is required to apply changes.')

    = render_if_exists 'admin/application_settings/personal_access_token_expiration_policy', form: f

    .form-group
      = f.label :user_oauth_applications, _('User OAuth applications'), class: 'label-bold'
      .form-check
        = f.check_box :user_oauth_applications, class: 'form-check-input'
        = f.label :user_oauth_applications, class: 'form-check-label' do
          = _('Allow users to register any application to use GitLab as an OAuth provider')
    .form-group
      = f.label :user_default_external, _('New users set to external'), class: 'label-bold'
      .form-check
        = f.check_box :user_default_external, class: 'form-check-input'
        = f.label :user_default_external, class: 'form-check-label' do
          = _('Newly registered users will by default be external')
      .prepend-top-10
        = _('Internal users')
      = f.text_field :user_default_internal_regex, placeholder: _('Regex pattern'), class: 'form-control prepend-top-5'
      .help-block
        = _('Specify an e-mail address regex pattern to identify default internal users.')
        = link_to _('More information'), help_page_path('user/permissions', anchor: 'external-users-permissions'),
          target: '_blank'
    .form-group
      = f.label :user_show_add_ssh_key_message, _('Prompt users to upload SSH keys'), class: 'label-bold'
      .form-check
        = f.check_box :user_show_add_ssh_key_message, class: 'form-check-input'
        = f.label :user_show_add_ssh_key_message, class: 'form-check-label' do
          = _("Inform users without uploaded SSH keys that they can't push over SSH until one is added")

    = render_if_exists 'admin/application_settings/updating_name_disabled_for_users', form: f
    = render_if_exists 'admin/application_settings/availability_on_namespace_setting', form: f

  = f.submit _('Save changes'), class: 'btn btn-success qa-save-changes-button'
