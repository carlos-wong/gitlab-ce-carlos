- group = local_assigns.fetch(:group)
- css_class = 'no-description' if group.description.blank?

%li.group-row.py-3{ class: css_class }
  .controls
    = link_to _('Edit'), admin_group_edit_path(group), id: "edit_#{dom_id(group)}", class: 'btn'
    = link_to _('Delete'), [:admin, group], data: { confirm: _("Are you sure you want to remove %{group_name}?") % { group_name: group.name } }, method: :delete, class: 'btn btn-remove'
  .stats
    %span.badge.badge-pill
      = storage_counter(group.storage_size)

    = render_if_exists 'admin/namespace_plan_badge', namespace: group
    = render_if_exists 'admin/groups/marked_for_deletion_badge', group: group

    %span
      = icon('bookmark')
      = number_with_delimiter(group.projects.count)

    %span
      = icon('users')
      = number_with_delimiter(group.users.count)

    %span.visibility-icon.has-tooltip{ data: { container: 'body', placement: 'left' }, title: visibility_icon_description(group) }
      = visibility_level_icon(group.visibility_level, fw: false)

  .avatar-container.rect-avatar.s40
    = group_icon(group, class: "avatar s40 d-none d-sm-block")
  .title
    = link_to [:admin, group], class: 'group-name' do
      = group.full_name

  - if group.description.present?
    .description
      = markdown_field(group, :description)
