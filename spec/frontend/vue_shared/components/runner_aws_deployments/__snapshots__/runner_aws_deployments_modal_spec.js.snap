// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RunnerAwsDeploymentsModal renders the modal 1`] = `
<gl-modal-stub
  actionprimary="[object Object]"
  actionsecondary="[object Object]"
  arialabel=""
  dismisslabel="Close"
  modalclass=""
  modalid="runner-aws-deployments-modal"
  size="sm"
  title="Deploy GitLab Runner in AWS"
  titletag="h4"
>
  <p>
    Select your preferred option here. In the next step, you can choose the capacity for your runner in the AWS CloudFormation console.
  </p>
   
  <gl-form-radio-group-stub
    checked="[object Object]"
    disabledfield="disabled"
    htmlfield="html"
    label="Choose your preferred GitLab Runner"
    label-sr-only=""
    options=""
    textfield="text"
    valuefield="value"
  >
    <gl-form-radio-stub
      class="gl-py-5 gl-pl-8 gl-border-b"
      value="[object Object]"
    >
      <div
        class="gl-mt-n1 gl-pl-4 gl-pb-2 gl-font-weight-bold"
      >
        
        Amazon Linux 2 Docker HA with manual scaling and optional scheduling. Non-spot.
        
        <gl-accordion-stub
          class="gl-pt-3"
          headerlevel="3"
        >
          <gl-accordion-item-stub
            class="gl-font-weight-normal"
            headerclass=""
            title="More Details"
            titlevisible="Less Details"
          >
            <p
              class="gl-pt-2"
            >
              No spot. This is the default choice for Linux Docker executor.
            </p>
             
            <p
              class="gl-m-0"
            >
              A capacity of 1 enables warm HA through Auto Scaling group re-spawn. A capacity of 2 enables hot HA because the service is available even when a node is lost. A capacity of 3 or more enables hot HA and manual scaling of runner fleet.
            </p>
          </gl-accordion-item-stub>
        </gl-accordion-stub>
      </div>
    </gl-form-radio-stub>
    <gl-form-radio-stub
      class="gl-py-5 gl-pl-8 gl-border-b"
      value="[object Object]"
    >
      <div
        class="gl-mt-n1 gl-pl-4 gl-pb-2 gl-font-weight-bold"
      >
        
        Amazon Linux 2 Docker HA with manual scaling and optional scheduling. 100% spot.
        
        <gl-accordion-stub
          class="gl-pt-3"
          headerlevel="3"
        >
          <gl-accordion-item-stub
            class="gl-font-weight-normal"
            headerclass=""
            title="More Details"
            titlevisible="Less Details"
          >
            <p
              class="gl-pt-2"
            >
              100% spot.
            </p>
             
            <p
              class="gl-m-0"
            >
              Capacity of 1 enables warm HA through Auto Scaling group re-spawn. Capacity of 2 enables hot HA because the service is available even when a node is lost. Capacity of 3 or more enables hot HA and manual scaling of runner fleet.
            </p>
          </gl-accordion-item-stub>
        </gl-accordion-stub>
      </div>
    </gl-form-radio-stub>
    <gl-form-radio-stub
      class="gl-py-5 gl-pl-8 gl-border-b"
      value="[object Object]"
    >
      <div
        class="gl-mt-n1 gl-pl-4 gl-pb-2 gl-font-weight-bold"
      >
        
        Windows 2019 Shell with manual scaling and optional scheduling. Non-spot.
        
        <gl-accordion-stub
          class="gl-pt-3"
          headerlevel="3"
        >
          <gl-accordion-item-stub
            class="gl-font-weight-normal"
            headerclass=""
            title="More Details"
            titlevisible="Less Details"
          >
            <p
              class="gl-pt-2"
            >
              No spot. Default choice for Windows Shell executor.
            </p>
             
            <p
              class="gl-m-0"
            >
              Capacity of 1 enables warm HA through Auto Scaling group re-spawn. Capacity of 2 enables hot HA because the service is available even when a node is lost. Capacity of 3 or more enables hot HA and manual scaling of runner fleet.
            </p>
          </gl-accordion-item-stub>
        </gl-accordion-stub>
      </div>
    </gl-form-radio-stub>
    <gl-form-radio-stub
      class="gl-py-5 gl-pl-8"
      value="[object Object]"
    >
      <div
        class="gl-mt-n1 gl-pl-4 gl-pb-2 gl-font-weight-bold"
      >
        
        Windows 2019 Shell with manual scaling and optional scheduling. 100% spot.
        
        <gl-accordion-stub
          class="gl-pt-3"
          headerlevel="3"
        >
          <gl-accordion-item-stub
            class="gl-font-weight-normal"
            headerclass=""
            title="More Details"
            titlevisible="Less Details"
          >
            <p
              class="gl-pt-2"
            >
              100% spot.
            </p>
             
            <p
              class="gl-m-0"
            >
              Capacity of 1 enables warm HA through Auto Scaling group re-spawn. Capacity of 2 enables hot HA because the service is available even when a node is lost. Capacity of 3 or more enables hot HA and manual scaling of runner fleet.
            </p>
          </gl-accordion-item-stub>
        </gl-accordion-stub>
      </div>
    </gl-form-radio-stub>
  </gl-form-radio-group-stub>
   
  <p>
    <gl-sprintf-stub
      message="Don't see what you are looking for? See the full list of options, including a fully customizable option %{linkStart}here%{linkEnd}."
    />
  </p>
</gl-modal-stub>
`;
